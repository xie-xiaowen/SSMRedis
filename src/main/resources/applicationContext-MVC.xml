<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 使用注解开发， 自动扫描包 -->
    <context:component-scan base-package="com.xxw.controller" />
    <!-- Spring MVC 为 @Controller分发请求所必需的 -->
    <mvc:annotation-driven />
    <!-- 静态资源访问 （交由DispatcherServlet 来处理静态资源访问） -->
    <mvc:default-servlet-handler />
    <!-- 更智能的静态访问（js/image）的访问（有SpringMVC自己来处理静态资源访问） -->
    <mvc:resources mapping="/static/js/**/" location="/static/js/**" />
    <mvc:resources mapping="/static/image/**/" location="/static/image/**" />


    <!-- 声明自动为spring容器中那些配置@aspectJ切面的bean创建代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true" />

    <!-- 设置proxy-target-class属性为true，基于cglib动态代理（Spring的代理）
         设置proxy-target-class属性为false，基于JavaSE代理（JDK的动态代理）
    <aop:config proxy-target-class="true" />
    &lt;!&ndash; 注入自定义日志类 &ndash;&gt;
    <bean id="logAspect" class="com.xxw.util.LoggerAspect" />
    &lt;!&ndash; 使用Spring AOP实现日志管理 &ndash;&gt;
    <aop:config>
        &lt;!&ndash; 定义切面 &ndash;&gt;
        <aop:aspect id="logAspect" ref="logAspect">
            &lt;!&ndash; 定义切入点 &ndash;&gt;
            <aop:pointcut  id="pointcut" expression="execution(* com.xxw.controller.*.*(..))" />
            &lt;!&ndash; 前值增强 &ndash;&gt;
            <aop:before method="logBefore" pointcut-ref="pointcut" />
            &lt;!&ndash; 后置增强 &ndash;&gt;
            <aop:after method="logAfter" pointcut-ref="pointcut" />
            &lt;!&ndash; 环绕增强 &ndash;&gt;
            &lt;!&ndash;<aop:around method="logAround" pointcut-ref="pointcut" />&ndash;&gt;
        </aop:aspect>
    </aop:config>-->

    <!-- 上传拦截，配置文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大字节 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="4096" />
        <!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->
        <property name="resolveLazily" value="true" />
    </bean>

    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 跳转的文件的前缀 -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <!-- 跳转的文件的后缀 -->
        <property name="suffix" value=".jsp" />
    </bean>

</beans>